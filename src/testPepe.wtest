import pepe.*

describe "Sueldo Pepe" {

	
	test "pepe cadete, monto fijo, presentismo normal , 3 faltas" {
		pepe.categoria(cadete)
		pepe.bonoResultado(fijo)
		pepe.bonoPresentismo(normal)
		pepe.faltas(3)
		assert.equals( 20800, pepe.sueldo())
	}

	test "pepe gerente, bono por porcentaje, presentismo nulo , 0 faltas" {
		pepe.categoria(gerente)
		pepe.bonoResultado(porcentual)
		pepe.bonoPresentismo(presentismoNulo)
		assert.equals( 16500, pepe.sueldo())
	}
	
	test "pepe cadete, monto normal, presentismo normal , 0 faltas" {
		pepe.categoria(cadete)
		pepe.bonoResultado(normal)
		pepe.bonoPresentismo(normal)
		assert.equals( 24000 , pepe.sueldo())
	}

	test "pepe cadete, monto porcentaje, presentismo normal , 1 falta" {
		pepe.categoria(cadete)
		pepe.bonoResultado(porcentual)
		pepe.bonoPresentismo(normal)
		pepe.faltas(1)
		assert.equals( 23000 , pepe.sueldo())
	}
	
	test "sofia cadete , resultados normal"{
		sofia.categoria(cadete)
		assert.equals(26000 , sofia.sueldo() )
	}
	
	test "La categoría base de medio tiempo es cadete., Pepe tiene categoría medio tiempo.
			bono por resultados de porcentaje, y bono por presentismo demagógico ,"{
		medioTiempo.categoriaBase(cadete)
		pepe.categoria(medioTiempo)
		pepe.bonoResultado(porcentual)
		pepe.bonoPresentismo(demagogico)
		pepe.faltas(1)
		assert.equals(11500 , pepe.sueldo())
	}
	
	test "Roque tiene bono por resultados monto fijo."{
		roque.bonoResultado(fijo)
		assert.equals(37800 , roque.sueldo())
	}
	
	test "Ernesto tiene como compañero a Pepe, y bono por presentismo de ajuste."{
		medioTiempo.categoriaBase(cadete)
		ernesto.categoria(medioTiempo)
		ernesto.bonoPresentismo(ajuste)
		assert.equals(10100 , ernesto.sueldo())	
	}
}